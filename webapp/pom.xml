<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-3.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.erian.microgrid</groupId>
	<artifactId>webapp</artifactId>
	<version>1.0-SNAPSHOT</version>

	<packaging>war</packaging>
	<name>${project.artifactId}</name>

	<properties>
		<aspectj.version>1.8.9</aspectj.version>
		<java.version>1.8</java.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<slf4j.version>1.7.21</slf4j.version>
		<log4j.version>1.2.17</log4j.version>
		<!-- <querydsl.version>3.6.4</querydsl.version> <spring-security.version>4.1.1.RELEASE</spring-security.version> 
			<hibernate.version>5.1.0.Final</hibernate.version> -->
		<jackson.version>2.7.2</jackson.version>
		<modelmapper.version>0.7.5</modelmapper.version>
		<springfox.version>2.5.0</springfox.version>
	</properties>
	<repositories>

		<repository>
			<id>jboss-public-repository-group</id>
			<name>JBoss Public Maven Repository Group</name>
			<url>http://repository.jboss.org/nexus/content/groups/public/</url>
		</repository>
		<repository>
			<id>io.spring.repo.maven.release</id>
			<url>http://repo.spring.io/release/</url>
		</repository>

		<repository>
			<id>io.spring.repo.maven.milestone</id>
			<url>http://repo.spring.io/milestone/</url>
		</repository>

		<repository>
			<id>oss-jfrog-artifactory</id>
			<name>oss-jfrog-artifactory-releases</name>
			<url>http://oss.jfrog.org/artifactory/oss-release-local</url>
		</repository>

		<repository>
			<id>jvnet-nexus-releases</id>
			<name>jvnet-nexus-releases</name>
			<url>https://maven.java.net/content/repositories/releases/</url>
		</repository>
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<id>io.spring.repo.maven.release</id>
			<url>http://repo.spring.io/release/</url>
		</pluginRepository>
		<pluginRepository>
			<id>io.spring.repo.maven.milestone</id>
			<url>http://repo.spring.io/milestone/</url>
		</pluginRepository>
	</pluginRepositories>
	<dependencyManagement>
		<dependencies>
			<!-- Spring BOM -->
			<dependency>
				<groupId>io.spring.platform</groupId>
				<artifactId>platform-bom</artifactId>
				<version>2.0.6.RELEASE</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			
		</dependencies>
	</dependencyManagement>

	<build>
		<finalName>webappDev</finalName>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<excludes>
					<exclude>**/*.xls</exclude>
				</excludes>
				<filtering>true</filtering>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<includes>
					<include>**/*.xls</include>
				</includes>
				<filtering>false</filtering>
			</resource>

			<resource>
				<directory>${project.build.directory}/generated-resources
				</directory>
			</resource>

		</resources>
		<plugins>
			
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.2</version>
				<configuration>
					<failOnMissingWebXml>false</failOnMissingWebXml>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.5.1</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<compilerArgument>-proc:none</compilerArgument>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>
			
			

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.19</version>
				<configuration>
					<printSummary>true</printSummary>
					<redirectTestOutputToFile>true</redirectTestOutputToFile>
					<excludes>
						<exclude>**/*IntegrationTest*</exclude>
					</excludes>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.12.4</version>
				<configuration>
					<includes>
						<include>**/*IntegrationTest*</include>
					</includes>
				</configuration>
				<executions>
					<execution>
						<id>integration-test</id>
						<goals>
							<goal>integration-test</goal>
						</goals>
					</execution>
					<execution>
						<id>verify</id>
						<goals>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>9.3.7.v20160115</version>
				<configuration>
					<scanIntervalSeconds>10</scanIntervalSeconds>
					<stopPort>8005</stopPort>
					<stopKey>STOP</stopKey>
					<webApp>
						<contextPath>/webapp</contextPath>
					</webApp>
				</configuration>
				<executions>
					<execution>
						<id>start-jetty</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>stop</goal>
							<goal>start</goal>
						</goals>
						<configuration>
							<scanIntervalSeconds>0</scanIntervalSeconds>
							<daemon>true</daemon>
						</configuration>
					</execution>
					<execution>
						<id>stop-jetty</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>stop</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.codehaus.cargo</groupId>
				<artifactId>cargo-maven2-plugin</artifactId>
				<configuration>
					<container>
						<containerId>tomcat8x</containerId>
						<type>embedded</type>
					</container>

					<configuration>
						<properties>
							<cargo.servlet.port>9000</cargo.servlet.port>
							<cargo.logging>high</cargo.logging>
						</properties>
						<!-- add auto reload  -->
						
						
					</configuration>

				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.tomcat.maven</groupId>
				<artifactId>tomcat7-maven-plugin</artifactId>
				<version>2.2</version>
				<configuration>
					<path>/webapp</path>
					<contextFile>src/main/webapp/META-INF/context2.xml</contextFile>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.3</version>
				<configuration>
					<descriptorRefs>
						<descriptorRef>jar-with-dependencies</descriptorRef>
					</descriptorRefs>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>2.7</version>
			</plugin>
			<!-- IDE -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>2.7</version>
				<!-- Note 2.8 does not work with AspectJ aspect path -->
				<configuration>
					<downloadSources>true</downloadSources>
					<downloadJavadocs>false</downloadJavadocs>
					<wtpversion>2.0</wtpversion>
					<additionalBuildcommands>
						<buildCommand>
							<name>org.eclipse.ajdt.core.ajbuilder</name>
							<arguments>
								<aspectPath>org.springframework.aspects</aspectPath>
								<!-- org.springframework.data.mongojdbc.crossstore -->
							</arguments>
						</buildCommand>
						<buildCommand>
							<name>org.springframework.ide.eclipse.core.springbuilder</name>
						</buildCommand>
					</additionalBuildcommands>
					<additionalProjectnatures>
						<projectnature>org.eclipse.ajdt.ui.ajnature</projectnature>
						<projectnature>org.springframework.ide.eclipse.core.springnature
						</projectnature>
					</additionalProjectnatures>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-idea-plugin</artifactId>
				<version>2.2</version>
				<configuration>
					<downloadSources>true</downloadSources>
					<dependenciesAsLibraries>true</dependenciesAsLibraries>
				</configuration>
			</plugin>

		</plugins>

	</build>
	<profiles>
	
		<profile>
			<id>staging</id>
			<properties>
				<jdbc.url><![CDATA[jdbc:mysql://172.21.76.125:3306/test]]>
				</jdbc.url>
				<jdbc.username>mysqluser</jdbc.username>
				<jdbc.password>mysql@erian</jdbc.password>

				<log4j.level>INFO</log4j.level>

				<spring.profiles.active>staging</spring.profiles.active>


				<!-- hibernate -->
				<!-- <hibernate.hbm2ddl.auto>create</hibernate.hbm2ddl.auto>
				<hibernate.show_sql>true</hibernate.show_sql>
				<hibernate.format_sql>true</hibernate.format_sql> -->


				<hibernate.hbm2ddl.auto>update</hibernate.hbm2ddl.auto>
				<hibernate.show_sql>false</hibernate.show_sql>
				<hibernate.format_sql>false</hibernate.format_sql>
				<hibernate.dialect>org.hibernate.dialect.MySQL5Dialect
				</hibernate.dialect>
							

			</properties>
			<dependencies>
				<dependency>
					<groupId>mysql</groupId>
					<artifactId>mysql-connector-java</artifactId>
				</dependency>
			</dependencies>
			<build>
				<resources>
					<resource>
						<directory>src/main/resources-staging</directory>
						<filtering>true</filtering>
					</resource>
				</resources>
			</build>
		</profile>
		<profile>
			<id>prod</id>
			<properties>
				<jdbc.url><![CDATA[jdbc:mysql://localhost:3306/app]]>
				</jdbc.url>
				<jdbc.username>root</jdbc.username>
				<jdbc.password></jdbc.password>

				<log4j.level>INFO</log4j.level>

				<spring.profiles.active>prod</spring.profiles.active>

				<hibernate.hbm2ddl.auto>none</hibernate.hbm2ddl.auto>
				<hibernate.show_sql>false</hibernate.show_sql>
				<hibernate.format_sql>false</hibernate.format_sql>
				<hibernate.dialect>org.hibernate.dialect.MySQL5Dialect
				</hibernate.dialect>
			</properties>
			<dependencies>
				<dependency>
					<groupId>mysql</groupId>
					<artifactId>mysql-connector-java</artifactId>
				</dependency>
			</dependencies>
			<build>
				<resources>
					<resource>
						<directory>src/main/resources-prod</directory>
						<filtering>true</filtering>
					</resource>
				</resources>
			</build>
		</profile>
	</profiles>
</project>